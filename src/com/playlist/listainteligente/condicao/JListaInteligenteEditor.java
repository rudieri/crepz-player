/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.playlist.listainteligente.condicao;

import com.conexao.Transacao;
import com.playlist.Playlist;
import com.playlist.PlaylistBD;
import com.playlist.TipoPlayList;
import java.awt.Component;
import java.awt.event.ActionListener;
import java.awt.event.WindowListener;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author rudieri
 */
public class JListaInteligenteEditor extends javax.swing.JDialog implements ActionListener, WindowListener {

    private Playlist playlist;

    /**
     * Creates new form JListaInteligenteEditor
     *
     * @param parent
     * @param modal
     */
    public JListaInteligenteEditor(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

    }

    public void atualizarCondicoes(Playlist playlist) {
        try {
            CondicaoSC filtro = new CondicaoSC();
            filtro.setPlaylist(playlist);
            ArrayList<Condicao> listar = CondicaoBD.listar(filtro);
            jPanel_Condicoes.removeAll();
            for (int i = 0; i < listar.size(); i++) {
                Condicao condicao = listar.get(i);
                JCondicao jCondicao = new JCondicao();
                jCondicao.setCondicao(condicao);
                jPanel_Condicoes.add(jCondicao);
            }
        } catch (Exception ex) {
            Logger.getLogger(JListaInteligenteEditor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void setPlaylist(Playlist playlist) {
        this.playlist = playlist;
        if (playlist == null) {
            this.playlist = new Playlist();
            this.playlist.setTipoPlayList(TipoPlayList.INTELIGENTE);
            adicionarCondicao();
        } else {
            jTextField_Nome.setText(playlist.getNome());
            atualizarCondicoes(playlist);
        }
    }

    public Playlist getPlaylist() {
        return playlist;
    }

    private void salvar() {
        Transacao t = new Transacao();
        try {
            if (jTextField_Nome.getText().isEmpty()) {
                throw new IllegalStateException("Informa um nome para sua nova lista.");
            }
            t.begin();
            if (playlist.getNome() == null || playlist.getNome().isEmpty()) {
                playlist.setNome(jTextField_Nome.getText());
            }
            if (PlaylistBD.existe(playlist, t)) {
                CondicaoSC filtro = new CondicaoSC();
                filtro.setPlaylist(playlist);
                ArrayList<Condicao> listar = CondicaoBD.listar(filtro, t);
                for (int i = 0; i < listar.size(); i++) {
                    Condicao condicao = listar.get(i);
                    CondicaoBD.excluir(condicao, t);
                }
            } else {
                playlist.setNome(jTextField_Nome.getText());
                PlaylistBD.incluir(playlist, t);
                if (!PlaylistBD.existe(playlist, t)) {
                    throw new IllegalStateException("Droga! Não está funcionando...");
                }
            }

            for (int i = 0; i < jPanel_Condicoes.getComponentCount(); i++) {
                Component component = jPanel_Condicoes.getComponent(i);
                if (component.getClass() == JCondicao.class) {
                    Condicao condicao = ((JCondicao) component).getCondicao();
                    condicao.setPlaylist(playlist);
                    CondicaoBD.incluir(condicao, t);
                }
            }
            t.commit();
            dispose();
        } catch (Exception ex) {
            if (ex instanceof IllegalStateException) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }

    private void adicionarCondicao() {
        JCondicao jCondicao = new JCondicao();
        jPanel_Condicoes.add(jCondicao, jPanel_Condicoes.getComponentCount() - 1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField_Nome = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel_Condicoes = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(this);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jLabel1.setText("Nome:");
        jLabel1.setPreferredSize(new java.awt.Dimension(70, 15));
        jPanel2.add(jLabel1, java.awt.BorderLayout.WEST);
        jPanel2.add(jTextField_Nome, java.awt.BorderLayout.CENTER);

        jButton3.setText("Adicionar uma Condição");
        jButton3.addActionListener(this);
        jPanel2.add(jButton3, java.awt.BorderLayout.LINE_END);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jButton1.setText("Salvar");
        jButton1.addActionListener(this);
        jPanel1.add(jButton1);

        jButton2.setText("Cancelar");
        jButton2.addActionListener(this);
        jPanel1.add(jButton2);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        jPanel_Condicoes.setLayout(new javax.swing.BoxLayout(jPanel_Condicoes, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane1.setViewportView(jPanel_Condicoes);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(757, 382));
        setLocationRelativeTo(null);
    }

    // Code for dispatching events from components to event handlers.

    public void actionPerformed(java.awt.event.ActionEvent evt) {
        if (evt.getSource() == jButton1) {
            JListaInteligenteEditor.this.jButton1ActionPerformed(evt);
        }
        else if (evt.getSource() == jButton2) {
            JListaInteligenteEditor.this.jButton2ActionPerformed(evt);
        }
        else if (evt.getSource() == jButton3) {
            JListaInteligenteEditor.this.jButton3ActionPerformed(evt);
        }
    }

    public void windowActivated(java.awt.event.WindowEvent evt) {
    }

    public void windowClosed(java.awt.event.WindowEvent evt) {
    }

    public void windowClosing(java.awt.event.WindowEvent evt) {
        if (evt.getSource() == JListaInteligenteEditor.this) {
            JListaInteligenteEditor.this.formWindowClosing(evt);
        }
    }

    public void windowDeactivated(java.awt.event.WindowEvent evt) {
    }

    public void windowDeiconified(java.awt.event.WindowEvent evt) {
    }

    public void windowIconified(java.awt.event.WindowEvent evt) {
    }

    public void windowOpened(java.awt.event.WindowEvent evt) {
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        playlist = null;
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        salvar();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        adicionarCondicao();
//        Rectangle visibleRect = jScrollPane1.getVisibleRect();
//        System.out.println(visibleRect);
//        visibleRect.y = jPanel_Condicoes.getHeight();//-visibleRect.height;
//        System.out.println(visibleRect);
//        jScrollPane1.scrollRectToVisible(visibleRect);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        playlist = null;
    }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel_Condicoes;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField_Nome;
    // End of variables declaration//GEN-END:variables
}
