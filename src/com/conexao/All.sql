DROP table IF EXISTS genero cascade;
CREATE TABLE genero(
id SMALLINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
nome varchar(64)
);

DROP table IF EXISTS fotos cascade;
CREATE TABLE fotos(
id SMALLINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
palavra_chave varchar(250),
endereco varchar(512)
);

DROP table IF EXISTS artista cascade;
CREATE TABLE artista(
id SMALLINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
nome varchar(64) NOT NULL ,
pais varchar(32),
);

DROP table IF EXISTS compositor cascade;
CREATE TABLE compositor(
id SMALLINT,
primary key(id),
foreign key(id) references artista(id)
);

DROP table IF EXISTS interprete cascade;
CREATE TABLE interprete(
id SMALLINT,
primary key(id),
foreign key(id) references artista(id)
);

DROP table IF EXISTS album cascade;
CREATE TABLE album(
id SMALLINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
nome varchar(64) NOT NULL ,
data_lanc date,
cod_fotos smallint,
cod_interprete smallint,
foreign key(cod_fotos) references fotos(id),
foreign key(cod_interprete) references interprete(id)
);

DROP table IF EXISTS musica cascade;
CREATE TABLE musica(
id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
arquivo varchar(500) NOT NULL UNIQUE ,
nome varchar(64),
favorita boolean,
vezes_tocada int,
cod_comp int,
cod_album int,
cod_genero int,
FOREIGN KEY (cod_comp) references compositor(id),
FOREIGN KEY (cod_album) references album(id),
FOREIGN KEY (cod_genero) REFERENCES genero(id)
);

DROP table IF EXISTS playList cascade;
CREATE TABLE playList(
id smallINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
nome varchar(32),
ultima_edit date,
criacao date
);

DROP table IF EXISTS lista_musica cascade;
CREATE TABLE lista_musica(
id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
lista smallint foreign key references playlist(id),
cod_mus int foreign key references musica(id)
);






